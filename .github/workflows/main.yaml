name: lint and build project code

on: [push]

jobs:
  lint-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: 'backend'
    strategy:
      matrix:
        node-version: [14.x]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: '**/package-lock.json'
    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        path: ~/.npm
        key: ${{ runner.os }}-lint-backend-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-lint-backend-${{ env.cache-name }}-
          ${{ runner.os }}-lint-backend-
          ${{ runner.os }}-
    - run: npm ci
    - run: npm run lint

  lint-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: 'frontend'
    strategy:
      matrix:
        node-version: [16.x]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: '**/package-lock.json'
    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        path: ~/.npm
        key: ${{ runner.os }}-lint-frontend-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-lint-frontend-${{ env.cache-name }}-
          ${{ runner.os }}-lint-frontend-
          ${{ runner.os }}-
    - run: npm ci
    - run: npm run lint

  build:
    needs: [lint-backend, lint-frontend]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.DOCKER_API_KEY }}
    - name: Build the docker-compose stack
      run: docker-compose -f docker-compose.yaml build
    - name: Tag frontend
      run: docker tag recommender-engine_frontend:latest ghcr.io/samay97/recommender-frontend:latest
    - name: Tag backend
      run: docker tag recommender-engine_backend:latest ghcr.io/samay97/recommender-backend:latest
    - name: Upload frontend image
      run: docker push ghcr.io/samay97/recommender-frontend:latest
    - name: Upload backend image
      run: docker push ghcr.io/samay97/recommender-backend:latest
