version: '3'
services:
  proxy:
    image: nginx:1.21.6
    ports:
      - 8080:80
    volumes:
      - ./recommender.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
      - backend

  frontend:
    build:
      context: ./frontend/
      dockerfile: Dockerfile
    ports:
      - 4200:4200
      - 49153:49153 # hot reload port
    container_name: frontend
    volumes:
       - ./frontend/:/usr/src/app
       - /usr/src/app/node_modules
    depends_on:
      - backend
  
  backend:
    build:
      context: ./backend/
      target: development-build-stage-debugger
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - 3000:3000
      - 9229:9229 # debug port
    environment:
      PORT: 3000
      MONGO_HOST: mongo
      MONGO_PORT: 27017
      MONGO_DATABASE: recommender
      RECOMMENDER_HOST: recommender
      RECOMMENDER_PORT: 4000
    volumes:
      - ./backend/:/app
      - /app/node_modules
    restart: 'unless-stopped'
    links:
      - mongo
    depends_on:
      - mongo
  
  mongo:
    image: mongo:5
    restart: 'unless-stopped'
    container_name: mongo
    ports:
      - 27017:27017
    volumes:
      - ./mongo-db/mongorestore.sh:/docker-entrypoint-initdb.d/mongorestore.sh
      - .db-backup:/db-backup
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_INITDB_DATABASE: admin
      dbUser: myuser
      dbPwd: password
      dbName: recommender

  
  recommender:
    build:
      context: ./recommender-engine/
      dockerfile: Dockerfile
    ports:
      - 4000:4000
    container_name: recommender       
    restart: 'unless-stopped'
    volumes:
      - ./recommender-engine/:/app
    depends_on:
      - backend
    environment:
      PORT: 4000
      MONGO_HOST: mongo
      MONGO_PORT: 27017
      MONGO_DATABASE: recommender
      MONGO_DATABASE_USER: myuser
      MONGO_DATABASE_PASSWORD: password
      FLASK_ENV: development
    

volumes:
  data:
    driver: local
